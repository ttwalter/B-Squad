buildscript {
	repositories {
		maven {
			url 'https://repo1.maven.org/maven2'
		}
	}
	ext {
    // Get latest of major versions (#.+)
	
	  // Spring
    springBootVersion = '1.5.10.RELEASE'
    springframeworkVersion = '5.0.4.RELEASE'
    springIntegrationVersion = '5.0.4.RELEASE'
    springConfig = '2.0.1.RELEASE'
    
    // Java Common
    apacheCommonsVersion = '3.7'
    
    // Misc
    junitVersion = '4.12'
	gradleSSHVersion = '2.+'
	jacksonVersion = '2.+'
	apacheCommonsDBCPVersion = '2.2.0'
	guavaVersion = '24.0-jre'
	logbackVersion = '1.2.3'
	}
 	dependencies {
      classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
      classpath "org.hidetake:gradle-ssh-plugin:${gradleSSHVersion}"
  }	
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'




def projectName = 'B-Squad'
def projectVersion = '0.1.0'
def application = 'ffba'


repositories {
	
	mavenCentral() //-- this is causing SSL certificate error (this now points at https://repo.maven.apache.org/maven2 as of Gradle 4.4.1)

	mavenLocal()
}

tasks.withType(JavaCompile) {
    // Show warnings of deprecated classes
    options.deprecation = true
}

sourceCompatibility = 1.8
targetCompatibility = 1.8


test { 

  //testLogging.showStandardStreams = true 
}


sourceSets {
	main {
		resources {
			srcDirs = ["src/main/resources"]
		}
	}
}

dependencies {

	testCompile("junit:junit:${junitVersion}")
	//compile fileTree(dir: 'lib', include: ['*.jar'])
 
  	// Logger
  	compile("ch.qos.logback:logback-classic:${logbackVersion}")
	
	// Java Common
  	compile("org.apache.commons:commons-lang3:${apacheCommonsVersion}")
  
	// Spring Boot
	compile("org.springframework.boot:spring-boot-starter:${springBootVersion}")
	compile("org.springframework.boot:spring-boot-test:${springBootVersion}")
	

	
	//Mongo DB
	// https://mvnrepository.com/artifact/org.mongodb/mongo-java-driver
	compile group: 'org.mongodb', name: 'mongo-java-driver', version: '3.7.1'

	// Spring Framework
	compile("org.springframework:spring-jms:${springframeworkVersion}")
	compile("org.springframework.integration:spring-integration-core:${springIntegrationVersion}")

	
	
}

bootRepackage {
    mainClass = 'com.nm.jaguar.shark.JaguarSharkApplication'
}


springBoot
{
	executable = true
}

